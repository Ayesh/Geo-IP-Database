name: Update GeoIP Database
on:
  workflow_dispatch:
  schedule:
    - cron: '5 4 */3 * *'

jobs:
  build:

    strategy:
      matrix:
        php-versions: ['8.2']
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}


      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Install dependencies
        run: |
          git config --global --add safe.directory /github/workspace
          rm -rf vendor/bin
          composer install --no-progress --prefer-dist

      - name: Download and setup database
        run: |
          mkdir input
          wget -O db.zip "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=zip"
          unzip db.zip -d input
          rm db.zip
          mv input/*/*.csv input/ -f
          ls input

      - name: Process database
        run: |
          git config --global --add safe.directory '*'
          php vendor/ayesh/geo-ip-tree-builder/run.php input/GeoLite2-Country-Blocks-IPv4.csv input/GeoLite2-Country-Locations-en.csv data
          git status

      - name: Get current date
        id: date
        run: |
          echo "::set-output name=date::$(date +'%Y%m%d')"
          echo "Update database ${{steps.date.outputs.date}}"
          
      - name: Update composer and npm package versions
        run: |
          npm --no-git-tag-version version "v1.1.${{steps.date.outputs.date}}"

      - name: Commit and tag if changed
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update database ${{steps.date.outputs.date}}"
          tagging_message: "v1.1.${{steps.date.outputs.date}}"
          branch: main

      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: "Publish npm releases"
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
